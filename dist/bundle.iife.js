var aesGcm=function(t){"use strict";return t.decrypt=async function(t,e){const r={name:"AES-GCM",iv:t.iv};return await crypto.subtle.decrypt(r,e,t.encrypted)},t.encrypt=async function(t,e){const r=crypto.getRandomValues(new Uint8Array(12)),n={name:"AES-GCM",iv:r};return{encrypted:await crypto.subtle.encrypt(n,e,t),iv:r}},t.exportJwk=async function(t){if(!t.extractable)throw new Error("Provided key is not extractable. Consider passing the extractable argument to generateKey or importKey method if you need to extract the key");return await crypto.subtle.exportKey("jwk",t)},t.generateKey=async function(t=256,e=!1){const r={name:"AES-GCM",length:t};return await crypto.subtle.generateKey(r,e,["encrypt","decrypt"])},t.importKey=async function(t,e=!1){return void 0!==t.byteLength?await crypto.subtle.importKey("raw",t,{name:"AES-GCM"},e,["encrypt","decrypt"]):await crypto.subtle.importKey("jwk",t,{name:"AES-GCM"},e,["encrypt","decrypt"])},t}({});
